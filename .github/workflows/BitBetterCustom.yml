name: BitBetter Custom Image

on:
  push:
  schedule:
    - cron:  '0 0 * * *'
jobs:
  check_version:
    runs-on: ubuntu-latest
    name: Check Last Built Version
    outputs:
      buildimage: ${{ steps.get_version.outputs.buildimage }}
      buildversion: ${{ steps.get_version.outputs.buildversion }}
      dockerrepo: ${{ steps.set_repo.outputs.dockerrepo }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'public'
      - name: Get Latest Version
        id: get_version
        run: |
          export BW_VERSION_LATEST="$(curl --silent https://raw.githubusercontent.com/bitwarden/server/master/scripts/bitwarden.sh | grep 'COREVERSION="' | sed 's/^[^"]*"//; s/".*//')"
          export BW_VERSION_LAST_BUILT="$(cat bw_version_custom.txt)"
          if [ $BW_VERSION_LATEST == $BW_VERSION_LAST_BUILT ]; then
            export NEED_BUILD=false
          else
            export NEED_BUILD=true
          fi
          echo "##[set-output name=buildimage;]$NEED_BUILD"
          echo "##[set-output name=buildversion;]$BW_VERSION_LATEST"
      - name: Set Repo
        id: set_repo
        run: |
          export REPOSITORY=yaoa/bitbetter
          echo "##[set-output name=dockerrepo;]$REPOSITORY"

  build_bitbetter:
    runs-on: ubuntu-latest
    name: Publish BitBetter
    needs: check_version
    if: ${{ needs.check_version.outputs.buildimage == 'true' || github.event_name == 'push' }}
    env:
      REPO: ${{ needs.check_version.outputs.dockerrepo }}
      VERSION: ${{ needs.check_version.outputs.buildversion }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'public'
      - name: Build Image
        id: build_image
        run: |
          docker build -f ./src/bitBetter/Dockerfile.custom --build-arg BITWARDEN_TAG=bitwarden/api:${VERSION} -t bitbetter/ci:api .
          docker build -f ./src/bitBetter/Dockerfile.custom --build-arg BITWARDEN_TAG=bitwarden/identity:${VERSION} -t bitbetter/ci:identity .
      - name: Login
        run: |
          docker login -u ${{ secrets.dockerID }} -p ${{ secrets.dockerPassword }}
      - name: Deploy Run Number
        run: |
          docker tag bitbetter/ci:api ${REPO}:api-custom-$GITHUB_RUN_NUMBER
          docker tag bitbetter/ci:identity ${REPO}:identity-custom-$GITHUB_RUN_NUMBER
          docker push ${REPO}:api-custom-$GITHUB_RUN_NUMBER
          docker push ${REPO}:identity-custom-$GITHUB_RUN_NUMBER
          echo ${REPO}:api-custom-$GITHUB_RUN_NUMBER Deployed
          echo ${REPO}:identity-custom-$GITHUB_RUN_NUMBER Deployed
      - name: Deploy Latest
        run: |
          docker tag bitbetter/ci:api ${REPO}:api-custom-latest
          docker tag bitbetter/ci:identity ${REPO}:identity-custom-latest
          docker push ${REPO}:api-custom-latest
          docker push ${REPO}:identity-custom-latest
          echo ${REPO}:api-custom-latest Deployed
          echo ${REPO}:identity-custom-latest Deployed
      - name: Deploy Tag
        run: |
          docker tag bitbetter/ci:api ${REPO}:api-custom-${VERSION}
          docker tag bitbetter/ci:identity ${REPO}:identity-custom-${VERSION}
          docker push ${REPO}:api-custom-${VERSION}
          docker push ${REPO}:identity-custom-${VERSION}
          echo ${REPO}:api-custom-${VERSION} Deployed
          echo ${REPO}:identity-custom-${VERSION} Deployed
      - name: Save Version Number
        run: |
          echo ${VERSION} > bw_version_custom.txt
      - name: Commit changes
        uses: EndBug/add-and-commit@v4
        with:
          message: "Bitwarden Version Update"
          add: "bw_version_custom.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_lic_generator:
    runs-on: ubuntu-latest
    name: Publish License Generator
    needs: check_version
    if: ${{ needs.check_version.outputs.buildimage == 'true' || github.event_name == 'push' }}
    env:
      REPO: ${{ needs.check_version.outputs.dockerrepo }}
      VERSION: ${{ needs.check_version.outputs.buildversion }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'public'
      - name: Build Image
        id: build_image
        run: |
          docker build -f ./src/licenseGen/Dockerfile.custom --build-arg BITWARDEN_TAG=bitwarden/api:${VERSION} -t bitbetter/ci:licensegen .
      - name: Login
        run: |
          docker login -u ${{ secrets.dockerID }} -p ${{ secrets.dockerPassword }}
      - name: Deploy Run Number
        run: |
          docker tag bitbetter/ci:licensegen ${REPO}:licensegen-custom-$GITHUB_RUN_NUMBER
          docker push ${REPO}:licensegen-custom-$GITHUB_RUN_NUMBER
          echo ${REPO}:licensegen-custom-$GITHUB_RUN_NUMBER Deployed
      - name: Deploy Latest
        run: |
          docker tag bitbetter/ci:licensegen ${REPO}:licensegen-custom-latest
          docker push ${REPO}:licensegen-custom-latest
          echo ${REPO}:licensegen-custom-latest Deployed
      - name: Deploy Tag
        run: |
          docker tag bitbetter/ci:licensegen ${REPO}:licensegen-custom-${VERSION}
          docker push ${REPO}:licensegen-custom-${VERSION}
          echo ${REPO}:licensegen-custom-${VERSION} Deployed
  
  build_cert_gen:
    runs-on: ubuntu-latest
    name: Publish Certificate Generator
    needs: check_version
    if: ${{ needs.check_version.outputs.buildimage == 'true' || github.event_name == 'push' }}
    env:
      REPO: ${{ needs.check_version.outputs.dockerrepo }}
      VERSION: ${{ needs.check_version.outputs.buildversion }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'public'
      - name: Build Image
        id: build_image
        run: |
          docker build -f ./publicKeys/Dockerfile -t bitbetter/ci:certificate-gen .
      - name: Login
        run: |
          docker login -u ${{ secrets.dockerID }} -p ${{ secrets.dockerPassword }}
      - name: Deploy Run Number
        run: |
          docker tag bitbetter/ci:certificate-gen ${REPO}:certificate-gen-$GITHUB_RUN_NUMBER
          docker push ${REPO}:certificate-gen-$GITHUB_RUN_NUMBER
          echo ${REPO}:certificate-gen-$GITHUB_RUN_NUMBER Deployed
      - name: Deploy Latest
        run: |
          docker tag bitbetter/ci:certificate-gen ${REPO}:certificate-gen-latest
          docker push ${REPO}:certificate-gen-latest
          echo ${REPO}:certificate-gen-latest Deployed
      - name: Deploy Tag
        run: |
          docker tag bitbetter/ci:certificate-gen ${REPO}:certificate-gen-${VERSION}
          docker push ${REPO}:certificate-gen-${VERSION}
          echo ${REPO}:certificate-gen-${VERSION} Deployed
